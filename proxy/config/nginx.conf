worker_processes  5;
worker_rlimit_nofile 8192;

events {
  worker_connections  1024;
}

http {

  default_type application/octet-stream;
  log_format   main '$remote_addr - $remote_user [$time_local]  $status '
    '"$request" $body_bytes_sent "$http_referer" '
    '"$http_user_agent" "$http_x_forwarded_for"';
  sendfile     on;
  tcp_nopush   on;
  server_names_hash_bucket_size 128; # this seems to be required for some vhosts

  server {

    listen 443 default ssl;
    server_name proxy;
    ssl_certificate /etc/ssl/server.crt;
    ssl_certificate_key /etc/ssl/server.key;
    add_header Strict-Transport-Security max-age=2592000;

    location /oauth2/ {
      proxy_pass       http://oauth2_proxy:4180;
      proxy_set_header Host                    $host;
      proxy_set_header X-Real-IP               $remote_addr;
      proxy_set_header X-Scheme                $scheme;
      proxy_set_header X-Auth-Request-Redirect $request_uri;
    }

    location = /oauth2/auth {
      proxy_pass       http://oauth2_proxy:4180;
      proxy_set_header Host             $host;
      proxy_set_header X-Real-IP        $remote_addr;
      proxy_set_header X-Scheme         $scheme;
      # nginx auth_request includes headers but not body
      proxy_set_header Content-Length   "";
      proxy_pass_request_body           off;
    }

    location / {
      auth_request /oauth2/auth;
      error_page 401 = /oauth2/sign_in;

      # pass information via X-User and X-Email headers to backend,
      # requires running with --set-xauthrequest flag
      # auth_request_set $user   $upstream_http_x_auth_request_user;
      # auth_request_set $email  $upstream_http_x_auth_request_email;
      # proxy_set_header X-User  $user;
      # proxy_set_header X-Email $email;

      # if you enabled --cookie-refresh, this is needed for it to work with auth_request
      # auth_request_set $auth_cookie $upstream_http_set_cookie;
      # add_header Set-Cookie $auth_cookie;

      proxy_pass http://kibana:5601;
    }
  }
}